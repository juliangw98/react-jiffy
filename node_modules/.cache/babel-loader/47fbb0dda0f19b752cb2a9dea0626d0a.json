{"ast":null,"code":"import _objectSpread from \"/Users/julianwieckardt/Desktop/jiffy/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/julianwieckardt/Desktop/jiffy/src/App.js\";\nimport React, { Component } from \"react\";\nimport loader from \"./images/loader.svg\";\n\nconst Header = () => React.createElement(\"div\", {\n  className: \"header grid\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 4\n  },\n  __self: this\n}, React.createElement(\"h1\", {\n  className: \"title\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 5\n  },\n  __self: this\n}, \"Jiffy\"));\n\nconst UserHint = ({\n  loading,\n  hintText\n}) => React.createElement(\"div\", {\n  className: \"user-hint\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 9\n  },\n  __self: this\n}, loading ? React.createElement(\"img\", {\n  className: \"block mx-auto\",\n  src: \"loader\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 10\n  },\n  __self: this\n}) : hintText);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n\n    this.searchGiphy = async searchTerm => {\n      try {\n        const response = await fetch(\"https://api.giphy.com/v1/gifs/search?api_key=BNBQdaOJdcjRkyZ8t4aavRBRM4zES6qX&q=\".concat(searchTerm, \"&limit=25&offset=0&rating=PG-13&lang=en\"));\n\n        const _ref = await response.json(),\n              data = _ref.data;\n\n        this.setState((prevState, props) => _objectSpread({}, prevState, {\n          gif: data[0]\n        }));\n      } catch {}\n    };\n\n    this.handleChange = event => {\n      const value = event.target.value;\n      this.setState((prevState, props) => _objectSpread({}, prevState, {\n        searchTerm: value,\n        hintText: value.length > 2 ? \"hit enter to search \".concat(value) : \"\"\n      }));\n    };\n\n    this.handleKeyPress = event => {\n      const value = event.target.value;\n\n      if (value.length > 2 && event.key === \"Enter\") {\n        this.searchGiphy(value);\n      }\n\n      console.log(event.key);\n    };\n\n    this.state = {\n      searchTerm: \"\",\n      hintText: \"\",\n      gif: null\n    };\n  }\n\n  render() {\n    const _this$state = this.state,\n          searchTerm = _this$state.searchTerm,\n          gif = _this$state.gif;\n    return React.createElement(\"div\", {\n      className: \"page\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59\n      },\n      __self: this\n    }, React.createElement(Header, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 60\n      },\n      __self: this\n    }), React.createElement(\"div\", {\n      className: \"search grid\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 61\n      },\n      __self: this\n    }, gif && React.createElement(\"video\", {\n      className: \"grid-item video\",\n      autoPlay: true,\n      loop: true,\n      src: gif.images.original.mp4,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 63\n      },\n      __self: this\n    }), React.createElement(\"input\", {\n      className: \"input grid-item\",\n      placeholder: \"type something\",\n      onChange: this.handleChange,\n      onKeyPress: this.handleKeyPress,\n      value: searchTerm,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71\n      },\n      __self: this\n    })), React.createElement(UserHint, Object.assign({}, this.state, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 79\n      },\n      __self: this\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/julianwieckardt/Desktop/jiffy/src/App.js"],"names":["React","Component","Header","UserHint","loading","hintText","App","constructor","props","searchGiphy","searchTerm","response","fetch","json","data","setState","prevState","gif","handleChange","event","value","target","length","handleKeyPress","key","console","log","state","render","images","original","mp4"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport loader from \"./images/loader.svg\";\nconst Header = () => (\n  <div className=\"header grid\">\n    <h1 className=\"title\">Jiffy</h1>\n  </div>\n);\nconst UserHint = ({ loading, hintText }) => (\n  <div className=\"user-hint\">\n    {loading ? <img className=\"block mx-auto\" src=\"loader\" /> : hintText}\n  </div>\n);\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchTerm: \"\",\n      hintText: \"\",\n      gif: null\n    };\n  }\n\n  searchGiphy = async searchTerm => {\n    try {\n      const response = await fetch(\n        `https://api.giphy.com/v1/gifs/search?api_key=BNBQdaOJdcjRkyZ8t4aavRBRM4zES6qX&q=${searchTerm}&limit=25&offset=0&rating=PG-13&lang=en`\n      );\n      const { data } = await response.json();\n\n      this.setState((prevState, props) => ({\n        ...prevState,\n        gif: data[0]\n      }));\n    } catch {}\n  };\n\n  handleChange = event => {\n    const { value } = event.target;\n    this.setState((prevState, props) => ({\n      ...prevState,\n      searchTerm: value,\n      hintText: value.length > 2 ? `hit enter to search ${value}` : \"\"\n    }));\n  };\n\n  handleKeyPress = event => {\n    const { value } = event.target;\n\n    if (value.length > 2 && event.key === \"Enter\") {\n      this.searchGiphy(value);\n    }\n\n    console.log(event.key);\n  };\n  render() {\n    const { searchTerm, gif } = this.state;\n    return (\n      <div className=\"page\">\n        <Header />\n        <div className=\"search grid\">\n          {gif && (\n            <video\n              className=\"grid-item video\"\n              autoPlay\n              loop\n              src={gif.images.original.mp4}\n            />\n          )}\n\n          <input\n            className=\"input grid-item\"\n            placeholder=\"type something\"\n            onChange={this.handleChange}\n            onKeyPress={this.handleKeyPress}\n            value={searchTerm}\n          />\n        </div>\n        <UserHint {...this.state} />\n      </div>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}